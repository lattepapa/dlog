{"expireTime":9007200857059810000,"key":"transformer-remark-markdown-html-ast-d253b6c7371b09e2e978af589322bfb4-gatsby-remark-katexgatsby-remark-prismjs-","val":{"type":"root","children":[{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Pseudocode","position":{"start":{"line":2,"column":5,"offset":5},"end":{"line":2,"column":15,"offset":15}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":15,"offset":15}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"\"","position":{"start":{"line":4,"column":4,"offset":20},"end":{"line":4,"column":5,"offset":21}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Pseudocode","position":{"start":{"line":4,"column":7,"offset":23},"end":{"line":4,"column":17,"offset":33}}}],"position":{"start":{"line":4,"column":5,"offset":21},"end":{"line":4,"column":19,"offset":35}}},{"type":"text","value":" refers to code-like syntax that is generally used to ","position":{"start":{"line":4,"column":19,"offset":35},"end":{"line":4,"column":73,"offset":89}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"indicate to humans how some code syntax works","position":{"start":{"line":4,"column":75,"offset":91},"end":{"line":4,"column":120,"offset":136}}}],"position":{"start":{"line":4,"column":73,"offset":89},"end":{"line":4,"column":122,"offset":138}}},{"type":"text","value":", or illustrate the design of an item of code architecture. It won't work if you try to run it as code.\"","position":{"start":{"line":4,"column":122,"offset":138},"end":{"line":4,"column":226,"offset":242}}}],"position":{"start":{"line":4,"column":3,"offset":19},"end":{"line":4,"column":227,"offset":243}}},{"type":"text","value":" - ","position":{"start":{"line":4,"column":227,"offset":243},"end":{"line":4,"column":230,"offset":246}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Glossary/Pseudocode"},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"MDN","position":{"start":{"line":4,"column":233,"offset":249},"end":{"line":4,"column":236,"offset":252}}}],"position":{"start":{"line":4,"column":231,"offset":247},"end":{"line":4,"column":238,"offset":254}}}],"position":{"start":{"line":4,"column":230,"offset":246},"end":{"line":4,"column":301,"offset":317}}}],"position":{"start":{"line":4,"column":3,"offset":19},"end":{"line":4,"column":301,"offset":317}}},{"type":"text","value":"\n"}],"position":{"start":{"line":4,"column":1,"offset":17},"end":{"line":4,"column":301,"offset":317}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"의사코드란, 프로그램이 코드로 구현될 방향을 인간의 언어로 미리 설명한 것이다. 딱 봐도 의사코드로 기초방향성을 잘 설계해두어야 하지 않을까?\n","position":{"start":{"line":6,"column":1,"offset":319},"end":{"line":7,"column":1,"offset":399}}},{"type":"raw","value":"<br>","position":{"start":{"line":7,"column":1,"offset":399},"end":{"line":7,"column":5,"offset":403}}},{"type":"text","value":"\n","position":{"start":{"line":7,"column":5,"offset":403},"end":{"line":8,"column":1,"offset":404}}},{"type":"raw","value":"<br>","position":{"start":{"line":8,"column":1,"offset":404},"end":{"line":8,"column":5,"offset":408}}},{"type":"text","value":"\n","position":{"start":{"line":8,"column":5,"offset":408},"end":{"line":9,"column":1,"offset":409}}},{"type":"raw","value":"<br>","position":{"start":{"line":9,"column":1,"offset":409},"end":{"line":9,"column":5,"offset":413}}}],"position":{"start":{"line":6,"column":1,"offset":319},"end":{"line":9,"column":5,"offset":413}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"1. 미시경제학 교수님이 1학기 중간고사 성적을 A+(~100점), A(95점), A-(~94점), B+(~89점), B(85점),..., F(0 ~ 59점)까지 학점을 자동화하여 출력하고자 한다. 단, 100점을 초과하는 점수나 0점 미만의 점수가 입력될 경우 에러 메시지를 보여줘야 하며, 모든 점수는 정수형이다.","position":{"start":{"line":11,"column":6,"offset":420},"end":{"line":11,"column":183,"offset":597}}}],"position":{"start":{"line":11,"column":1,"offset":415},"end":{"line":11,"column":183,"offset":597}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">scoreToGrade</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">score</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token comment\">// [더이상 쪼갤 수 없는 것] 점수가 100을 넘거나 0 미만일 경우 => 에러출력</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>score <span class=\"token operator\">></span> <span class=\"token number\">100</span> <span class=\"token operator\">||</span> score <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">\"점수가 올바르지 않습니다. 점수(0~100)를 다시 입력하세요.\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>score <span class=\"token operator\">===</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'A+'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>score <span class=\"token operator\">>=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> score <span class=\"token operator\">&lt;</span> <span class=\"token number\">60</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'F'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// [로직1] 점수의 10의자리, 1의자리를 따로 변수로 각각 선언</span>\n  <span class=\"token keyword\">let</span> digitTen <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>score <span class=\"token operator\">/</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> digitOne <span class=\"token operator\">=</span> score <span class=\"token operator\">%</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// [로직2] 10의자리에 따라 A~F 결정</span>\n  <span class=\"token keyword\">let</span> grade<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>digitTen <span class=\"token operator\">===</span> <span class=\"token number\">9</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    grade <span class=\"token operator\">=</span> <span class=\"token string\">'A'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>digitTen <span class=\"token operator\">===</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    grade <span class=\"token operator\">=</span> <span class=\"token string\">'B'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>digitTen <span class=\"token operator\">===</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    grade <span class=\"token operator\">=</span> <span class=\"token string\">'C'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>digitTen <span class=\"token operator\">===</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    grade <span class=\"token operator\">=</span> <span class=\"token string\">'D'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// [로직3] 1의자리에 따라 +/0/- 결정</span>\n  <span class=\"token keyword\">let</span> level<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>digitOne <span class=\"token operator\">>=</span> <span class=\"token number\">7</span> <span class=\"token operator\">&amp;&amp;</span> digitOne <span class=\"token operator\">&lt;</span> <span class=\"token number\">9</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    level <span class=\"token operator\">=</span> <span class=\"token string\">'+'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>digitOne <span class=\"token operator\">>=</span> <span class=\"token number\">4</span> <span class=\"token operator\">&amp;&amp;</span> digitOne <span class=\"token operator\">&lt;=</span><span class=\"token operator\">=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    level <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>digitOne <span class=\"token operator\">>=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> digitOne <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    level <span class=\"token operator\">=</span> <span class=\"token string\">'-'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// [최종값 리턴] 위의 seq#2와 #3을 종합</span>\n  <span class=\"token keyword\">return</span> grade <span class=\"token operator\">+</span> level<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":13,"column":1,"offset":599},"end":{"line":54,"column":4,"offset":1504}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":55,"column":1,"offset":1505}}}}