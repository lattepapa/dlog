{"expireTime":9007200857059810000,"key":"transformer-remark-markdown-ast-48f65883d4375373266b9910255b5587-gatsby-remark-katexgatsby-remark-prismjs-","val":{"type":"root","children":[{"type":"heading","depth":3,"children":[{"type":"text","value":"map 메소드","position":{"start":{"line":2,"column":5,"offset":5},"end":{"line":2,"column":12,"offset":12},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":12,"offset":12},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"\"","position":{"start":{"line":4,"column":3,"offset":16},"end":{"line":4,"column":4,"offset":17},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"The ","position":{"start":{"line":4,"column":5,"offset":18},"end":{"line":4,"column":9,"offset":22},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"Map","position":{"start":{"line":4,"column":11,"offset":24},"end":{"line":4,"column":14,"offset":27},"indent":[]}}],"position":{"start":{"line":4,"column":9,"offset":22},"end":{"line":4,"column":16,"offset":29},"indent":[]}},{"type":"text","value":" object holds key-value pairs and ","position":{"start":{"line":4,"column":16,"offset":29},"end":{"line":4,"column":50,"offset":63},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"remembers the original","position":{"start":{"line":4,"column":52,"offset":65},"end":{"line":4,"column":74,"offset":87},"indent":[]}}],"position":{"start":{"line":4,"column":50,"offset":63},"end":{"line":4,"column":76,"offset":89},"indent":[]}},{"type":"text","value":" insertion order of the keys. Any value (both objects and primitive values) may be used as either a key or a value.","position":{"start":{"line":4,"column":76,"offset":89},"end":{"line":4,"column":191,"offset":204},"indent":[]}}],"position":{"start":{"line":4,"column":4,"offset":17},"end":{"line":4,"column":192,"offset":205},"indent":[]}},{"type":"text","value":"\" - ","position":{"start":{"line":4,"column":192,"offset":205},"end":{"line":4,"column":196,"offset":209},"indent":[]}},{"type":"link","title":null,"url":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map","children":[{"type":"strong","children":[{"type":"text","value":"MDN","position":{"start":{"line":4,"column":199,"offset":212},"end":{"line":4,"column":202,"offset":215},"indent":[]}}],"position":{"start":{"line":4,"column":197,"offset":210},"end":{"line":4,"column":204,"offset":217},"indent":[]}}],"position":{"start":{"line":4,"column":196,"offset":209},"end":{"line":4,"column":291,"offset":304},"indent":[]}}],"position":{"start":{"line":4,"column":3,"offset":16},"end":{"line":4,"column":291,"offset":304},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":14},"end":{"line":4,"column":291,"offset":304},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"map 메소드","position":{"start":{"line":6,"column":3,"offset":308},"end":{"line":6,"column":10,"offset":315},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":306},"end":{"line":6,"column":12,"offset":317},"indent":[]}},{"type":"text","value":"는 이전 포스팅인 forEach 메소드와 동일한 논리구조를 갖는다. 즉, 원본배열의 요소들에 대해 ","position":{"start":{"line":6,"column":12,"offset":317},"end":{"line":6,"column":67,"offset":372},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"주어진 함수","position":{"start":{"line":6,"column":69,"offset":374},"end":{"line":6,"column":75,"offset":380},"indent":[]}}],"position":{"start":{"line":6,"column":67,"offset":372},"end":{"line":6,"column":77,"offset":382},"indent":[]}},{"type":"text","value":"를 적용시키는 구조이다. 여기서 중요한 것은 ","position":{"start":{"line":6,"column":77,"offset":382},"end":{"line":6,"column":102,"offset":407},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"map 메소드","position":{"start":{"line":6,"column":104,"offset":409},"end":{"line":6,"column":111,"offset":416},"indent":[]}}],"position":{"start":{"line":6,"column":102,"offset":407},"end":{"line":6,"column":113,"offset":418},"indent":[]}},{"type":"text","value":"는 ","position":{"start":{"line":6,"column":113,"offset":418},"end":{"line":6,"column":115,"offset":420},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"immutable","position":{"start":{"line":6,"column":117,"offset":422},"end":{"line":6,"column":126,"offset":431},"indent":[]}}],"position":{"start":{"line":6,"column":115,"offset":420},"end":{"line":6,"column":128,"offset":433},"indent":[]}},{"type":"text","value":"(원본불변)의 성질을 갖는다는 것이다. ","position":{"start":{"line":6,"column":128,"offset":433},"end":{"line":6,"column":150,"offset":455},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"map 메소드","position":{"start":{"line":6,"column":152,"offset":457},"end":{"line":6,"column":159,"offset":464},"indent":[]}}],"position":{"start":{"line":6,"column":150,"offset":455},"end":{"line":6,"column":161,"offset":466},"indent":[]}},{"type":"text","value":"에 의해서는 원본배열은 수정되지 않으며, 마치 ","position":{"start":{"line":6,"column":161,"offset":466},"end":{"line":6,"column":187,"offset":492},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"slice 메소드","position":{"start":{"line":6,"column":189,"offset":494},"end":{"line":6,"column":198,"offset":503},"indent":[]}}],"position":{"start":{"line":6,"column":187,"offset":492},"end":{"line":6,"column":200,"offset":505},"indent":[]}},{"type":"text","value":"와 같이 새로운 배열이 도출된다. 예를 들어 아래와 같은 for 반복문이 먼저 있다고 하자.","position":{"start":{"line":6,"column":200,"offset":505},"end":{"line":6,"column":251,"offset":556},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":306},"end":{"line":6,"column":251,"offset":556},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span> brand<span class=\"token operator\">:</span> <span class=\"token string\">\"BMW\"</span><span class=\"token punctuation\">,</span> model<span class=\"token operator\">:</span> <span class=\"token string\">\"mini cooper\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> brand<span class=\"token operator\">:</span> <span class=\"token string\">\"Mercedes\"</span><span class=\"token punctuation\">,</span> model<span class=\"token operator\">:</span> <span class=\"token string\">\"CLA 250\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> brand<span class=\"token operator\">:</span> <span class=\"token string\">\"volkswagen\"</span><span class=\"token punctuation\">,</span> model<span class=\"token operator\">:</span> <span class=\"token string\">\"Golf TDI\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Name: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>brand<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>model<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":8,"column":1,"offset":558},"end":{"line":18,"column":4,"offset":811},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<table>\n  <tr><td>Name: BMW mini cooper</td></tr>\n  <tr><td>Name: Mercedes CLA 250</td></tr>\n  <tr><td>Name: volkswagen Golf TDI</td></tr>\n</table>\n<br>\n<br>\n<br>","position":{"start":{"line":20,"column":1,"offset":813},"end":{"line":27,"column":5,"offset":975},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"이것을 ","position":{"start":{"line":29,"column":1,"offset":977},"end":{"line":29,"column":5,"offset":981},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"map 메소드","position":{"start":{"line":29,"column":7,"offset":983},"end":{"line":29,"column":14,"offset":990},"indent":[]}}],"position":{"start":{"line":29,"column":5,"offset":981},"end":{"line":29,"column":16,"offset":992},"indent":[]}},{"type":"text","value":"를 활용하여 아래와 같이 바꿔서 표현할 수 있다. forEach 메소드에서의 경우와 마찬가지로, 위에서 ","position":{"start":{"line":29,"column":16,"offset":992},"end":{"line":29,"column":74,"offset":1050},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">arr[i]</code>","position":{"start":{"line":29,"column":74,"offset":1050},"end":{"line":29,"column":82,"offset":1058},"indent":[]}},{"type":"text","value":"라고 썼던 arr의 요소들은 함수 ","position":{"start":{"line":29,"column":82,"offset":1058},"end":{"line":29,"column":101,"offset":1077},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">printCarName</code>","position":{"start":{"line":29,"column":101,"offset":1077},"end":{"line":29,"column":115,"offset":1091},"indent":[]}},{"type":"text","value":"에서 ","position":{"start":{"line":29,"column":115,"offset":1091},"end":{"line":29,"column":118,"offset":1094},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">car</code>","position":{"start":{"line":29,"column":118,"offset":1094},"end":{"line":29,"column":123,"offset":1099},"indent":[]}},{"type":"text","value":"라고 하는 임의의 ","position":{"start":{"line":29,"column":123,"offset":1099},"end":{"line":29,"column":133,"offset":1109},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"입력변수","position":{"start":{"line":29,"column":135,"offset":1111},"end":{"line":29,"column":139,"offset":1115},"indent":[]}}],"position":{"start":{"line":29,"column":133,"offset":1109},"end":{"line":29,"column":141,"offset":1117},"indent":[]}},{"type":"text","value":"로 대신 표현할 수 있게 된다.","position":{"start":{"line":29,"column":141,"offset":1117},"end":{"line":29,"column":158,"offset":1134},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":977},"end":{"line":29,"column":158,"offset":1134},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span> brand<span class=\"token operator\">:</span> <span class=\"token string\">\"BMW\"</span><span class=\"token punctuation\">,</span> model<span class=\"token operator\">:</span> <span class=\"token string\">\"mini cooper\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> brand<span class=\"token operator\">:</span> <span class=\"token string\">\"Mercedes\"</span><span class=\"token punctuation\">,</span> model<span class=\"token operator\">:</span> <span class=\"token string\">\"CLA 250\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> brand<span class=\"token operator\">:</span> <span class=\"token string\">\"volkswagen\"</span><span class=\"token punctuation\">,</span> model<span class=\"token operator\">:</span> <span class=\"token string\">\"Golf TDI\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">printCarName</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">car</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Name: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>car<span class=\"token punctuation\">.</span>brand<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>car<span class=\"token punctuation\">.</span>model<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\narr<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>printCarName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":31,"column":1,"offset":1136},"end":{"line":43,"column":4,"offset":1397},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<table>\n  <tr><td>Name: BMW mini cooper</td></tr>\n  <tr><td>Name: Mercedes CLA 250</td></tr>\n  <tr><td>Name: volkswagen Golf TDI</td></tr>\n</table>\n<br>","position":{"start":{"line":45,"column":1,"offset":1399},"end":{"line":50,"column":5,"offset":1551},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"이처럼 ","position":{"start":{"line":52,"column":1,"offset":1553},"end":{"line":52,"column":5,"offset":1557},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"map 메소드","position":{"start":{"line":52,"column":7,"offset":1559},"end":{"line":52,"column":14,"offset":1566},"indent":[]}}],"position":{"start":{"line":52,"column":5,"offset":1557},"end":{"line":52,"column":16,"offset":1568},"indent":[]}},{"type":"text","value":"는 forEach 메소드와 동일한 결과물을 만들 수 있다. 한편, 위의 스크립트는 forEach처럼 반복나열 기능을 수행하도록 한 것이었는데 아래와 같이 ","position":{"start":{"line":52,"column":16,"offset":1568},"end":{"line":52,"column":102,"offset":1654},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"함수","position":{"start":{"line":52,"column":104,"offset":1656},"end":{"line":52,"column":106,"offset":1658},"indent":[]}}],"position":{"start":{"line":52,"column":102,"offset":1654},"end":{"line":52,"column":108,"offset":1660},"indent":[]}},{"type":"text","value":" 내용들을 바꾸면 다양한 변주가 가능하다.","position":{"start":{"line":52,"column":108,"offset":1660},"end":{"line":52,"column":131,"offset":1683},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":1553},"end":{"line":52,"column":131,"offset":1683},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span> brand<span class=\"token operator\">:</span> <span class=\"token string\">\"BMW\"</span><span class=\"token punctuation\">,</span> model<span class=\"token operator\">:</span> <span class=\"token string\">\"mini cooper\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> brand<span class=\"token operator\">:</span> <span class=\"token string\">\"Mercedes\"</span><span class=\"token punctuation\">,</span> model<span class=\"token operator\">:</span> <span class=\"token string\">\"CLA 250\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> brand<span class=\"token operator\">:</span> <span class=\"token string\">\"volkswagen\"</span><span class=\"token punctuation\">,</span> model<span class=\"token operator\">:</span> <span class=\"token string\">\"Golf TDI\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\narr<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">car</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>car<span class=\"token punctuation\">.</span>brand <span class=\"token operator\">=</span> <span class=\"token string\">\"Made in Germany, \"</span> <span class=\"token operator\">+</span> car<span class=\"token punctuation\">.</span>brand<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/*\n또는 다음과 같이 표현할 수도 있다.\nfunction nation(car) {\n  return car.brand = 'Made in Germany, ' + car.brand;\n};\n\narr.map(nation);\n*/</span></code></pre></div>","position":{"start":{"line":54,"column":1,"offset":1685},"end":{"line":73,"column":4,"offset":2052},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<table>\n  <tr><td>[ \"Made in Germany, BMW\", \"Made in Germany, Mercedes\", \"Made in Germany, volkswagen\" ]</td></tr>\n</table>\n<br>","position":{"start":{"line":75,"column":1,"offset":2054},"end":{"line":78,"column":5,"offset":2182},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"즉, ","position":{"start":{"line":80,"column":1,"offset":2184},"end":{"line":80,"column":4,"offset":2187},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"map 메소드","position":{"start":{"line":80,"column":6,"offset":2189},"end":{"line":80,"column":13,"offset":2196},"indent":[]}}],"position":{"start":{"line":80,"column":4,"offset":2187},"end":{"line":80,"column":15,"offset":2198},"indent":[]}},{"type":"text","value":"는 원본배열을 수정하지 않고 ","position":{"start":{"line":80,"column":15,"offset":2198},"end":{"line":80,"column":31,"offset":2214},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"주어진 함수","position":{"start":{"line":80,"column":33,"offset":2216},"end":{"line":80,"column":39,"offset":2222},"indent":[]}}],"position":{"start":{"line":80,"column":31,"offset":2214},"end":{"line":80,"column":41,"offset":2224},"indent":[]}},{"type":"text","value":"의 내용에 따라서, ","position":{"start":{"line":80,"column":41,"offset":2224},"end":{"line":80,"column":52,"offset":2235},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"원본배열의 길이","position":{"start":{"line":80,"column":54,"offset":2237},"end":{"line":80,"column":62,"offset":2245},"indent":[]}}],"position":{"start":{"line":80,"column":52,"offset":2235},"end":{"line":80,"column":64,"offset":2247},"indent":[]}},{"type":"text","value":"(원본배열의 요소개수)만큼 ","position":{"start":{"line":80,"column":64,"offset":2247},"end":{"line":80,"column":79,"offset":2262},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"새로운 배열을 리턴","position":{"start":{"line":80,"column":81,"offset":2264},"end":{"line":80,"column":91,"offset":2274},"indent":[]}}],"position":{"start":{"line":80,"column":79,"offset":2262},"end":{"line":80,"column":93,"offset":2276},"indent":[]}},{"type":"text","value":"한다.\n","position":{"start":{"line":80,"column":93,"offset":2276},"end":{"line":81,"column":1,"offset":2280},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":81,"column":1,"offset":2280},"end":{"line":81,"column":5,"offset":2284},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":81,"column":5,"offset":2284},"end":{"line":82,"column":1,"offset":2285},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":82,"column":1,"offset":2285},"end":{"line":82,"column":5,"offset":2289},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":82,"column":5,"offset":2289},"end":{"line":83,"column":1,"offset":2290},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":83,"column":1,"offset":2290},"end":{"line":83,"column":5,"offset":2294},"indent":[]}}],"position":{"start":{"line":80,"column":1,"offset":2184},"end":{"line":83,"column":5,"offset":2294},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"filter 메소드","position":{"start":{"line":85,"column":5,"offset":2300},"end":{"line":85,"column":15,"offset":2310},"indent":[]}}],"position":{"start":{"line":85,"column":1,"offset":2296},"end":{"line":85,"column":15,"offset":2310},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"\"","position":{"start":{"line":87,"column":3,"offset":2314},"end":{"line":87,"column":4,"offset":2315},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"The ","position":{"start":{"line":87,"column":5,"offset":2316},"end":{"line":87,"column":9,"offset":2320},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"filter","position":{"start":{"line":87,"column":11,"offset":2322},"end":{"line":87,"column":17,"offset":2328},"indent":[]}}],"position":{"start":{"line":87,"column":9,"offset":2320},"end":{"line":87,"column":19,"offset":2330},"indent":[]}},{"type":"text","value":"() method creates a new array with all elements that ","position":{"start":{"line":87,"column":19,"offset":2330},"end":{"line":87,"column":72,"offset":2383},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"pass the test","position":{"start":{"line":87,"column":74,"offset":2385},"end":{"line":87,"column":87,"offset":2398},"indent":[]}}],"position":{"start":{"line":87,"column":72,"offset":2383},"end":{"line":87,"column":89,"offset":2400},"indent":[]}},{"type":"text","value":" implemented by the provided function.","position":{"start":{"line":87,"column":89,"offset":2400},"end":{"line":87,"column":127,"offset":2438},"indent":[]}}],"position":{"start":{"line":87,"column":4,"offset":2315},"end":{"line":87,"column":128,"offset":2439},"indent":[]}},{"type":"text","value":"\" - ","position":{"start":{"line":87,"column":128,"offset":2439},"end":{"line":87,"column":132,"offset":2443},"indent":[]}},{"type":"link","title":null,"url":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter","children":[{"type":"strong","children":[{"type":"text","value":"MDN","position":{"start":{"line":87,"column":135,"offset":2446},"end":{"line":87,"column":138,"offset":2449},"indent":[]}}],"position":{"start":{"line":87,"column":133,"offset":2444},"end":{"line":87,"column":140,"offset":2451},"indent":[]}}],"position":{"start":{"line":87,"column":132,"offset":2443},"end":{"line":87,"column":236,"offset":2547},"indent":[]}}],"position":{"start":{"line":87,"column":3,"offset":2314},"end":{"line":87,"column":236,"offset":2547},"indent":[]}}],"position":{"start":{"line":87,"column":1,"offset":2312},"end":{"line":87,"column":236,"offset":2547},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"filter 메소드","position":{"start":{"line":89,"column":3,"offset":2551},"end":{"line":89,"column":13,"offset":2561},"indent":[]}}],"position":{"start":{"line":89,"column":1,"offset":2549},"end":{"line":89,"column":15,"offset":2563},"indent":[]}},{"type":"text","value":"도 map 메소드와 forEach 메소드처럼 원본배열의 요소들에 대해 ","position":{"start":{"line":89,"column":15,"offset":2563},"end":{"line":89,"column":54,"offset":2602},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"주어진 함수","position":{"start":{"line":89,"column":56,"offset":2604},"end":{"line":89,"column":62,"offset":2610},"indent":[]}}],"position":{"start":{"line":89,"column":54,"offset":2602},"end":{"line":89,"column":64,"offset":2612},"indent":[]}},{"type":"text","value":"를 적용하는 구조이다. 또한 ","position":{"start":{"line":89,"column":64,"offset":2612},"end":{"line":89,"column":80,"offset":2628},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"filter 메소드","position":{"start":{"line":89,"column":82,"offset":2630},"end":{"line":89,"column":92,"offset":2640},"indent":[]}}],"position":{"start":{"line":89,"column":80,"offset":2628},"end":{"line":89,"column":94,"offset":2642},"indent":[]}},{"type":"text","value":"도 마찬가지로 ","position":{"start":{"line":89,"column":94,"offset":2642},"end":{"line":89,"column":102,"offset":2650},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"immutable","position":{"start":{"line":89,"column":104,"offset":2652},"end":{"line":89,"column":113,"offset":2661},"indent":[]}}],"position":{"start":{"line":89,"column":102,"offset":2650},"end":{"line":89,"column":115,"offset":2663},"indent":[]}},{"type":"text","value":"(원본불변) 하다. 아래의 예를 통해 확인하자.","position":{"start":{"line":89,"column":115,"offset":2663},"end":{"line":89,"column":141,"offset":2689},"indent":[]}}],"position":{"start":{"line":89,"column":1,"offset":2549},"end":{"line":89,"column":141,"offset":2689},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span> brand<span class=\"token operator\">:</span> <span class=\"token string\">\"BMW\"</span><span class=\"token punctuation\">,</span> model<span class=\"token operator\">:</span> <span class=\"token string\">\"mini cooper\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> brand<span class=\"token operator\">:</span> <span class=\"token string\">\"Mercedes\"</span><span class=\"token punctuation\">,</span> model<span class=\"token operator\">:</span> <span class=\"token string\">\"CLA 250\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> brand<span class=\"token operator\">:</span> <span class=\"token string\">\"volkswagen\"</span><span class=\"token punctuation\">,</span> model<span class=\"token operator\">:</span> <span class=\"token string\">\"Golf TDI\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">luxury</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">car</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> car<span class=\"token punctuation\">.</span>brand<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"M\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\narr<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>luxury<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/*\n마찬가지로 다음과 같이 표현할 수 있다.\narr.filter(function(car) {\n  return car.brand.indexOf('M') !== -1;\n});\n*/</span></code></pre></div>","position":{"start":{"line":91,"column":1,"offset":2691},"end":{"line":110,"column":4,"offset":3034},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<table>\n  <tr><td>[ </td></tr>\n  <tr><td align= \"center\">{ brand: 'BMW', model: 'mini cooper' },</td></tr>\n  <tr><td align= \"center\">{ brand: 'Mercedes', model: 'CLA 250' }</td></tr>\n  <tr><td> ]</td></tr>\n</table>\n<br>","position":{"start":{"line":112,"column":1,"offset":3036},"end":{"line":118,"column":5,"offset":3255},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"즉, ","position":{"start":{"line":120,"column":1,"offset":3257},"end":{"line":120,"column":4,"offset":3260},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"filter 메소드","position":{"start":{"line":120,"column":6,"offset":3262},"end":{"line":120,"column":16,"offset":3272},"indent":[]}}],"position":{"start":{"line":120,"column":4,"offset":3260},"end":{"line":120,"column":18,"offset":3274},"indent":[]}},{"type":"text","value":"는 원본배열을 수정하진 않지만 map 메소드와 달리 ","position":{"start":{"line":120,"column":18,"offset":3274},"end":{"line":120,"column":47,"offset":3303},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"주어진 함수","position":{"start":{"line":120,"column":49,"offset":3305},"end":{"line":120,"column":55,"offset":3311},"indent":[]}}],"position":{"start":{"line":120,"column":47,"offset":3303},"end":{"line":120,"column":57,"offset":3313},"indent":[]}},{"type":"text","value":"의 ","position":{"start":{"line":120,"column":57,"offset":3313},"end":{"line":120,"column":59,"offset":3315},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"내용(=조건)에 들어맞는 요소","position":{"start":{"line":120,"column":61,"offset":3317},"end":{"line":120,"column":77,"offset":3333},"indent":[]}}],"position":{"start":{"line":120,"column":59,"offset":3315},"end":{"line":120,"column":79,"offset":3335},"indent":[]}},{"type":"text","value":"들만 추려내어 ","position":{"start":{"line":120,"column":79,"offset":3335},"end":{"line":120,"column":87,"offset":3343},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"새로운 배열을 리턴","position":{"start":{"line":120,"column":89,"offset":3345},"end":{"line":120,"column":99,"offset":3355},"indent":[]}}],"position":{"start":{"line":120,"column":87,"offset":3343},"end":{"line":120,"column":101,"offset":3357},"indent":[]}},{"type":"text","value":"한다.\n","position":{"start":{"line":120,"column":101,"offset":3357},"end":{"line":121,"column":1,"offset":3361},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":121,"column":1,"offset":3361},"end":{"line":121,"column":5,"offset":3365},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":121,"column":5,"offset":3365},"end":{"line":122,"column":1,"offset":3366},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":122,"column":1,"offset":3366},"end":{"line":122,"column":5,"offset":3370},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":122,"column":5,"offset":3370},"end":{"line":123,"column":1,"offset":3371},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":123,"column":1,"offset":3371},"end":{"line":123,"column":5,"offset":3375},"indent":[]}}],"position":{"start":{"line":120,"column":1,"offset":3257},"end":{"line":123,"column":5,"offset":3375},"indent":[1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"1. 아래 힌트와 같이 Netfix 시청 현황정보가 주어졌다. 주어진 정보를 토대로 30대 남성이 가장 좋아하는 장르를 알고자 한다.","position":{"start":{"line":125,"column":6,"offset":3382},"end":{"line":125,"column":80,"offset":3456},"indent":[]}}],"position":{"start":{"line":125,"column":1,"offset":3377},"end":{"line":125,"column":80,"offset":3456},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<span style=\"color:#088A68\">","position":{"start":{"line":127,"column":1,"offset":3458},"end":{"line":127,"column":29,"offset":3486},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"힌트","position":{"start":{"line":127,"column":31,"offset":3488},"end":{"line":127,"column":33,"offset":3490},"indent":[]}}],"position":{"start":{"line":127,"column":29,"offset":3486},"end":{"line":127,"column":35,"offset":3492},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":127,"column":35,"offset":3492},"end":{"line":127,"column":36,"offset":3493},"indent":[]}},{"type":"html","value":"</span>","position":{"start":{"line":127,"column":36,"offset":3493},"end":{"line":127,"column":43,"offset":3500},"indent":[]}}],"position":{"start":{"line":127,"column":1,"offset":3458},"end":{"line":127,"column":43,"offset":3500},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">let list = [\n  { n:&#39;Thor&#39;, a:34, t:&#39;Die Hard 3&#39;, g:&#39;action&#39;, d:&#39;18 Jul&#39; },\n  { n:&#39;Tony&#39;, a:38, t:&#39;Ghost Busters&#39;, g:&#39;comic&#39;, d:&#39;3 Jul&#39; },\n  { n:&#39;Wanda&#39;, a:18, t:&#39;Conjuring&#39;, g:&#39;horor&#39;, d:&#39;20 Jul&#39; },\n  { n:&#39;Steve&#39;, a:39, t:&#39;First Avenger&#39;, g:&#39;action&#39;, d:&#39;1 Jul&#39; },\n  { n:&#39;Parker&#39;, a:18, t:&#39;AI&#39;, g:&#39;sf&#39;, d:&#39;18 Jul&#39; },\n  { n:&#39;Wakanda&#39;, a:36, t:&#39;Conjuring2&#39;, g:&#39;horor&#39;, d:&#39;20 Jul&#39; },\n  { n:&#39;Strange&#39;, a:43, t:&#39;ET&#39;, g:&#39;sf&#39;, d:&#39;3 Jul&#39; }\n]</code></pre></div>","position":{"start":{"line":129,"column":1,"offset":3502},"end":{"line":139,"column":4,"offset":3942},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":141,"column":1,"offset":3944},"end":{"line":141,"column":5,"offset":3948},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// [더이상 쪼갤 수 없는 것] 30대</span>\n<span class=\"token keyword\">let</span> temp <span class=\"token operator\">=</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">man</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span><span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>man<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// [로직1] 30대 시청현황 배열에서 장르요소(g)만 산출</span>\n<span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\ntemp<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">genre</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  arr<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>genre<span class=\"token punctuation\">.</span>g<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// [로직2] arr 배열 내 요소들이 각각 얼마나 반복되는 지 확인</span>\n<span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> mostGenre<span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> mostCnt<span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// obj에 정의되지 않았다면 key와 value를 만들어주고</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">[</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    obj<span class=\"token punctuation\">[</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// key가 존재한다면 value에 1을 더해주는데,</span>\n  obj<span class=\"token punctuation\">[</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 만약 obj의 mostCnt key의 value보다 크다면 각각 모스트 key로 대입됨!</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">[</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> obj<span class=\"token punctuation\">[</span><span class=\"token string\">\"mostCnt\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    obj<span class=\"token punctuation\">[</span><span class=\"token string\">\"mostCnt\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">[</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    obj<span class=\"token punctuation\">[</span><span class=\"token string\">\"mostGenre\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 최종값 확인</span>\n<span class=\"token comment\">// obj.['mostGenre'];</span>\nobj<span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":143,"column":1,"offset":3950},"end":{"line":175,"column":4,"offset":4643},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<span style=\"color:#088A68\">\n<table style=\"border-color:#088A68\">\n  <tr><td>{ mostGenre: \"action\", mostCnt: 3, action: 3, comic: 2, horor: 2 }</td></tr>\n  </table>\n</span>","position":{"start":{"line":177,"column":1,"offset":4645},"end":{"line":181,"column":8,"offset":4816},"indent":[1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":182,"column":1,"offset":4817}}}}