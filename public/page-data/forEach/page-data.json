{"componentChunkName":"component---src-templates-post-template-tsx","path":"/forEach","result":{"pageContext":{"html":"<h3>forEach 메소드</h3>\n<p>while이나 for를 통해 반복문을 작성하는 방법 이외에도, <strong>forEach</strong>라고 하는 <strong>메소드</strong>(method)를 통한 반복문 실행의 방법이 존재한다. 자세히 말하자면 <strong>forEach 메소드</strong>가, 반복하기를 희망하는 <strong>함수</strong>(function)를 자신의 <strong>변수</strong>로 대입시키는 방법을 말한다. 먼저 <strong>forEach</strong>에 대한 MDN 레퍼런스를 확인하자.</p>\n<blockquote>\n<p>\"<em>The <strong>forEach() method executes a provided function</strong> once for each array element.</em>\" - <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach\"><strong>MDN</strong></a> > <br></p>\n</blockquote>\n<p>예를 들어 아래와 같은 for 반복문이 먼저 있다고 하자.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span> brand<span class=\"token operator\">:</span> <span class=\"token string\">\"BMW\"</span><span class=\"token punctuation\">,</span> model<span class=\"token operator\">:</span> <span class=\"token string\">\"mini cooper\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> brand<span class=\"token operator\">:</span> <span class=\"token string\">\"Mercedes\"</span><span class=\"token punctuation\">,</span> model<span class=\"token operator\">:</span> <span class=\"token string\">\"CLA 250\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> brand<span class=\"token operator\">:</span> <span class=\"token string\">\"volkswagen\"</span><span class=\"token punctuation\">,</span> model<span class=\"token operator\">:</span> <span class=\"token string\">\"Golf TDI\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Name: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>brand<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>model<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<table>\n  <tr><td>Name: BMW mini cooper</td></tr>\n  <tr><td>Name: Mercedes CLA 250</td></tr>\n  <tr><td>Name: volkswagen Golf TDI</td></tr>\n</table>\n<br>\n<br>\n<br>\n<p>이것을 <strong>forEach 메소드</strong>를 활용하여 아래와 같이 바꿔서 표현할 수 있다. 이때, 위에서 <code class=\"language-text\">arr[i]</code>라고 썼던 arr의 요소들은 함수 <code class=\"language-text\">printCarName</code>에서 <code class=\"language-text\">car</code>라고 하는 임의의 <strong>입력변수</strong>로 대신 표현할 수 있게 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span> brand<span class=\"token operator\">:</span> <span class=\"token string\">\"BMW\"</span><span class=\"token punctuation\">,</span> model<span class=\"token operator\">:</span> <span class=\"token string\">\"mini cooper\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> brand<span class=\"token operator\">:</span> <span class=\"token string\">\"Mercedes\"</span><span class=\"token punctuation\">,</span> model<span class=\"token operator\">:</span> <span class=\"token string\">\"CLA 250\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> brand<span class=\"token operator\">:</span> <span class=\"token string\">\"volkswagen\"</span><span class=\"token punctuation\">,</span> model<span class=\"token operator\">:</span> <span class=\"token string\">\"Golf TDI\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">printCarName</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">car</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Name: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>car<span class=\"token punctuation\">.</span>brand<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>car<span class=\"token punctuation\">.</span>model<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\narr<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>printCarName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<table>\n  <tr><td>Name: BMW mini cooper</td></tr>\n  <tr><td>Name: Mercedes CLA 250</td></tr>\n  <tr><td>Name: volkswagen Golf TDI</td></tr>\n</table>\n<br>\n<br>\n<br>\n<p>즉, <strong>forEach 메소드</strong>는 자신이 적용될 배열에 대해 '<strong>주어진 함수</strong>'(<code class=\"language-text\">printCarName</code>)를 그 배열의 요소들에 차례대로 적용해준다는 것을 알 수 있다. 그렇기 때문에 메소드에 대입될 <strong>변수</strong>로는 함수값이 아니라 <strong>함수 자체</strong>(<code class=\"language-text\">printCarName</code>)이어야 한다. 만약 함수값(<code class=\"language-text\">printCarName(car)</code>)이 대입된다면 배열의 요소에 적용할 규칙이 없는 것이 되어버리기 때문이다. 이러한 사실을 활용하여 위의 구문을 다시 써보면 아래와 같이 할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span> brand<span class=\"token operator\">:</span> <span class=\"token string\">\"BMW\"</span><span class=\"token punctuation\">,</span> model<span class=\"token operator\">:</span> <span class=\"token string\">\"mini cooper\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> brand<span class=\"token operator\">:</span> <span class=\"token string\">\"Mercedes\"</span><span class=\"token punctuation\">,</span> model<span class=\"token operator\">:</span> <span class=\"token string\">\"CLA 250\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> brand<span class=\"token operator\">:</span> <span class=\"token string\">\"volkswagen\"</span><span class=\"token punctuation\">,</span> model<span class=\"token operator\">:</span> <span class=\"token string\">\"Golf TDI\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\narr<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">car</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Name: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>car<span class=\"token punctuation\">.</span>brand<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>car<span class=\"token punctuation\">.</span>model<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<table>\n  <tr><td>Name: BMW mini cooper</td></tr>\n  <tr><td>Name: Mercedes CLA 250</td></tr>\n  <tr><td>Name: volkswagen Golf TDI</td></tr>\n</table>\n<br>\n<br>\n<br>\n<p>또는 아래와 같이도 바꿔서 쓸 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span> brand<span class=\"token operator\">:</span> <span class=\"token string\">\"BMW\"</span><span class=\"token punctuation\">,</span> model<span class=\"token operator\">:</span> <span class=\"token string\">\"mini cooper\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> brand<span class=\"token operator\">:</span> <span class=\"token string\">\"Mercedes\"</span><span class=\"token punctuation\">,</span> model<span class=\"token operator\">:</span> <span class=\"token string\">\"CLA 250\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> brand<span class=\"token operator\">:</span> <span class=\"token string\">\"volkswagen\"</span><span class=\"token punctuation\">,</span> model<span class=\"token operator\">:</span> <span class=\"token string\">\"Golf TDI\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\narr<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">car</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Name: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>car<span class=\"token punctuation\">.</span>brand<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>car<span class=\"token punctuation\">.</span>model<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<table>\n  <tr><td>Name: BMW mini cooper</td></tr>\n  <tr><td>Name: Mercedes CLA 250</td></tr>\n  <tr><td>Name: volkswagen Golf TDI</td></tr>\n</table>\n<br>\n<br>\n<br>\n<p>이렇게 다양한 방식으로 작성할 수 있는데, 재차 반복해서 말하자면 <strong>forEach</strong>는 <strong>Array.prototype의 메소드</strong>이기 때문에 가능한 것이다. 한편, <strong>forEach</strong>는 이 포스팅의 가장 서두에서 MDN 레퍼런스로 인용하였듯이, 그 안에 <strong>받을 수 있는 변수가 최대 3가지</strong>(this 객체는 잠깐 잊어두자) 정도라고 생각할 수 있다. 조금 복잡하게 말하자면, <strong>forEach</strong>에 대입할 함수는 최대 3개의 <strong>인자</strong>(argument)를 받는다. 이때 인자의 첫번째는 배열의 요소, 두번째는 배열의 인덱스, 세번째는 배열 원본을 의미한다. 이는 아래와 같이 확인할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span> brand<span class=\"token operator\">:</span> <span class=\"token string\">\"BMW\"</span><span class=\"token punctuation\">,</span> model<span class=\"token operator\">:</span> <span class=\"token string\">\"mini cooper\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> brand<span class=\"token operator\">:</span> <span class=\"token string\">\"Mercedes\"</span><span class=\"token punctuation\">,</span> model<span class=\"token operator\">:</span> <span class=\"token string\">\"CLA 250\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> brand<span class=\"token operator\">:</span> <span class=\"token string\">\"volkswagen\"</span><span class=\"token punctuation\">,</span> model<span class=\"token operator\">:</span> <span class=\"token string\">\"Golf TDI\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">printCarName</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">car<span class=\"token punctuation\">,</span> idx</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Name: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>car<span class=\"token punctuation\">.</span>brand<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>car<span class=\"token punctuation\">.</span>model<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> (</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>idx<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">번째 요소)</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\narr<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>printCarName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<table>\n  <tr><td>Name: BMW mini cooper (0번째 요소)</td></tr>\n  <tr><td>Name: Mercedes CLA 250 (1번째 요소)</td></tr>\n  <tr><td>Name: volkswagen Golf TDI (2번째 요소)</td></tr>\n</table>\n<br>\n<br>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"mini\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"CLA\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Golf\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">printCarName</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">car<span class=\"token punctuation\">,</span> idx<span class=\"token punctuation\">,</span> origin</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Name: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>car<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> (= </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>origin<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> 배열의 </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>idx<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">번째 요소)</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\narr<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>printCarName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<table>\n  <tr><td>Name: mini (= mini,CLA,Golf 배열의 0번째 요소)</td></tr>\n  <tr><td>Name: CLA (= mini,CLA,Golf 배열의 1번째 요소)</td></tr>\n  <tr><td>Name: Golf (= mini,CLA,Golf 배열의 2번째 요소)</td></tr>\n</table>\n<br>\n<br>\n<br>\n<h4>1. 너구리 라면을 먹고 싶은 Jason과, 아이스아메리카노를 마시고 싶은 Tony가 있다. PC방 주문기계를 통해 이 두명의 주문을 '비동기적(asynchronously)'으로 처리하고자 한다. 주문 후 5초만에 전달에 이르는 로직을 생각해보자.</h4>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// [더이상 쪼갤 수 없는 것] 주문 후 5초에는 전달이 완료되어야 함</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">delivery</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">callback<span class=\"token punctuation\">,</span> ms</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>callback<span class=\"token punctuation\">,</span> ms<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">complete</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">who<span class=\"token punctuation\">,</span> snack</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>who<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">에게 </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>snack<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> 전달완료</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// [로직1] 주문 정보 작성</span>\n<span class=\"token keyword\">let</span> orders <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">\"Jason\"</span><span class=\"token punctuation\">,</span> buy<span class=\"token operator\">:</span> <span class=\"token string\">\"너구리\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">\"Tony\"</span><span class=\"token punctuation\">,</span> buy<span class=\"token operator\">:</span> <span class=\"token string\">\"아이스아메리카노\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">process</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">what<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// [로직2] 주문 받은 메시지를 카운터에 띄우고</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>what<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> 주문이 접수되었습니다.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// [로직3] 5초만에 해당 주문을 전달처리하는 로직 완성</span>\n  <span class=\"token function\">delivery</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span>what<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// [로직4] 이들을 토대로 orders의 요소들을 비동기처리(call asynchronously)</span>\norders<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">orderUser</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">process</span><span class=\"token punctuation\">(</span>orderUser<span class=\"token punctuation\">.</span>buy<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">snack</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">complete</span><span class=\"token punctuation\">(</span>orderUser<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> snack<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<span style=\"color:#088A68\">\n<table style=\"border-color:#088A68\">\n  <tr><td>너구리 주문이 접수되었습니다.</td></tr>\n  <tr><td>아이스아메리카노 주문이 접수되었습니다.</td></tr>\n</table>\n(5초 후)\n<table style=\"border-color:#088A68\">\n  <tr><td>Jason에게 너구리 전달완료</td></tr>\n  <tr><td>Tony에게 아이스아메리카노 전달완료</td></tr>\n</table>\n<br>\n</span>\n이때 **forEach 메소드** 부분은 아래와 같이도 쓸 수 있다.\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">orders<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">orderUser</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">process</span><span class=\"token punctuation\">(</span>orderUser<span class=\"token punctuation\">.</span>buy<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">snack</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">result</span><span class=\"token punctuation\">(</span>orderUser<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> snack<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","title":"forEach"}},"staticQueryHashes":["3649515864"]}