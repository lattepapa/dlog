{"componentChunkName":"component---src-templates-post-template-tsx","path":"/reduce","result":{"pageContext":{"html":"<blockquote>\n<p><em>'The <strong>reduce</strong>() method executes a reducer function (that you provide) on each element of the array, <strong>resulting in single output</strong> value.'</em> - <strong>MDN</strong></p>\n</blockquote>\n<p><strong>reduce 메소드</strong>는 MDN reference에 나온 정의 그대로, 어떤 배열을 <strong>주어진 함수</strong>(reducer)에 적용하여 그 엘리먼트들을 <strong>하나의 결과</strong>로 도출할 때 사용된다. 물론 배열의 엘리먼트가 단순한 숫자일수도, 문자일수도, 아니면 배열이나 객체일 수도 있을 것이다. 하지만 중요한 것은 <strong>reduce 메소드</strong>는 그 엘리먼트들을 <strong>reducer</strong>(주어진 함수)를 통해 요리하여 <strong>하나의 결과</strong>로 만들어준다는 것이다. 참고로 아래는 map, filter와 이 reduce를 잘 요약하는 그림이다.\n<img src=\"https://images.velog.io/images/lattepapa/post/c6e4c69d-2545-4292-be2c-2e4b1a00df6b/map%20filter%20reduce.jpg\">\n<br></p>\n<h4>reduce 메소드가 유용한 상황</h4>\n<p>배열을 문자 또는 숫자로 변환하거나, 배열을 객체로 변환할 때 매우 유용하다.</p>\n<h4>reduce 메소드에 필요한 입력변수</h4>\n<p>1) <strong>accumulator</strong>: reducer에 의해 배열의 엘리먼트들이 연산되어진 결과값<br>\n2) <strong>current value</strong>: reducer에 의해 accumulator와 연산될 현재순번의 엘리먼트<br>\n3) <strong>inital value</strong>: reducer 연산의 최초 수행을 위해 accumulator에 지정될 초기값</p>\n<h4>reduce 메소드로 배열을 문자 또는 숫자로 전환하는 경우</h4>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre style=\"counter-reset: linenumber 0\" class=\"language-jsx line-numbers\"><code class=\"language-jsx\"><span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span> brand<span class=\"token operator\">:</span> <span class=\"token string\">\"BMW\"</span><span class=\"token punctuation\">,</span> model<span class=\"token operator\">:</span> <span class=\"token string\">\"mini cooper\"</span><span class=\"token punctuation\">,</span> nation<span class=\"token operator\">:</span> <span class=\"token string\">\"Germany\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> brand<span class=\"token operator\">:</span> <span class=\"token string\">\"Mercedes\"</span><span class=\"token punctuation\">,</span> model<span class=\"token operator\">:</span> <span class=\"token string\">\"CLA 250\"</span><span class=\"token punctuation\">,</span> nation<span class=\"token operator\">:</span> <span class=\"token string\">\"Germany\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> brand<span class=\"token operator\">:</span> <span class=\"token string\">\"volkswagen\"</span><span class=\"token punctuation\">,</span> model<span class=\"token operator\">:</span> <span class=\"token string\">\"Golf TDI\"</span><span class=\"token punctuation\">,</span> nation<span class=\"token operator\">:</span> <span class=\"token string\">\"Germany\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> brand<span class=\"token operator\">:</span> <span class=\"token string\">\"Mercedes\"</span><span class=\"token punctuation\">,</span> model<span class=\"token operator\">:</span> <span class=\"token string\">\"C class\"</span><span class=\"token punctuation\">,</span> nation<span class=\"token operator\">:</span> <span class=\"token string\">\"Germany\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">function</span> <span class=\"token function\">summaryByLine</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">list<span class=\"token punctuation\">,</span> car</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">  list <span class=\"token operator\">=</span> list <span class=\"token operator\">+</span> car<span class=\"token punctuation\">.</span>model <span class=\"token operator\">+</span> <span class=\"token string\">\". \"</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">return</span> list<span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token punctuation\">}</span></span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">arr<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span>summaryByLine<span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<br>\n위의 결과는 다음과 같이 나오게 된다.\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre style=\"counter-reset: linenumber 0\" class=\"language-jsx line-numbers\"><code class=\"language-jsx\"><span class=\"token string\">\"mini cooper. CLA 250. Golf TDI. C class. \"</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<br>\n이는 다음과 같은 모식도로 reduce 구동의 단계를 살펴볼 수 있다.\n<table style=\"font-size:9pt\">\n  <tr><th>#</th><th>acc(list)</th><th>cur(car)</th><th>return</th></tr>\n  <tr><td>1</td><td>''</td><td>'mini cooper'</td><td>'mini cooper. '</td></tr>\n  <tr><td>2</td><td>'mini cooper. '</td><td>'CLA 250'</td><td>'mini cooper. CLA 250. '</td></tr>\n  <tr><td>3</td><td>'mini cooper. CLA 250. '</td><td>'Golf TDI' </td><td>'mini cooper. CLA 250. Golf TDI. '</td></tr>\n  <tr><td>4</td><td>'mini cooper. CLA 250. Golf TDI. ' </td><td>'C class'</td><td>'mini cooper. CLA 250. Golf TDI. C class. '</td></td></tr>\n</table>\n<br>\n<br>\n<br>\n<h4>reduce 메소드로 배열을 객체로 전환하는 경우</h4>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre style=\"counter-reset: linenumber 0\" class=\"language-jsx line-numbers\"><code class=\"language-jsx\"><span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span> brand<span class=\"token operator\">:</span> <span class=\"token string\">\"BMW\"</span><span class=\"token punctuation\">,</span> model<span class=\"token operator\">:</span> <span class=\"token string\">\"mini cooper\"</span><span class=\"token punctuation\">,</span> nation<span class=\"token operator\">:</span> <span class=\"token string\">\"Germany\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> brand<span class=\"token operator\">:</span> <span class=\"token string\">\"Mercedes\"</span><span class=\"token punctuation\">,</span> model<span class=\"token operator\">:</span> <span class=\"token string\">\"CLA 250\"</span><span class=\"token punctuation\">,</span> nation<span class=\"token operator\">:</span> <span class=\"token string\">\"Germany\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> brand<span class=\"token operator\">:</span> <span class=\"token string\">\"volkswagen\"</span><span class=\"token punctuation\">,</span> model<span class=\"token operator\">:</span> <span class=\"token string\">\"Golf TDI\"</span><span class=\"token punctuation\">,</span> nation<span class=\"token operator\">:</span> <span class=\"token string\">\"Germany\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> brand<span class=\"token operator\">:</span> <span class=\"token string\">\"Mercedes\"</span><span class=\"token punctuation\">,</span> model<span class=\"token operator\">:</span> <span class=\"token string\">\"C class\"</span><span class=\"token punctuation\">,</span> nation<span class=\"token operator\">:</span> <span class=\"token string\">\"Germany\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> brand<span class=\"token operator\">:</span> <span class=\"token string\">\"Chevy\"</span><span class=\"token punctuation\">,</span> model<span class=\"token operator\">:</span> <span class=\"token string\">\"Mustang\"</span><span class=\"token punctuation\">,</span> nation<span class=\"token operator\">:</span> <span class=\"token string\">\"USA\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">sortByNation</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">list<span class=\"token punctuation\">,</span> car</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 분류기준(key)를 arr 배열의 임의의 엘리먼트(car)의 nation key로부터 추출</span>\n  <span class=\"token keyword\">let</span> ntKey <span class=\"token operator\">=</span> car<span class=\"token punctuation\">.</span>nation<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 만일 임의의 list 객체에 ntKey와 일치하는게 있다면 그 value에 car 엘리먼트를 추가</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ntKey <span class=\"token keyword\">in</span> list<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    list<span class=\"token punctuation\">[</span>ntKey<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>car<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// 만일 ntKey와 일치하는 key가 list 객체에 없다면 해당 key를 만들고 car 엘리먼트 추가</span>\n  <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    list<span class=\"token punctuation\">[</span>ntKey<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    list<span class=\"token punctuation\">[</span>ntKey<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>car<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> list<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 초기값은 빈 객체로 하여 reduce 메소드 구현</span>\narr<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span>sortByNation<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<br>\n위의 결과는 다음과 같이 나오게 된다.\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre style=\"counter-reset: linenumber 0\" class=\"language-jsx line-numbers\"><code class=\"language-jsx\"><span class=\"token punctuation\">{</span>\n  Germany<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span> brand<span class=\"token operator\">:</span> <span class=\"token string\">'BMW'</span><span class=\"token punctuation\">,</span> nation<span class=\"token operator\">:</span> <span class=\"token string\">'Germany'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> brand<span class=\"token operator\">:</span> <span class=\"token string\">'Mercedes'</span><span class=\"token punctuation\">,</span> nation<span class=\"token operator\">:</span> <span class=\"token string\">'Germany'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> brand<span class=\"token operator\">:</span> <span class=\"token string\">'volkswagen'</span><span class=\"token punctuation\">,</span> nation<span class=\"token operator\">:</span> <span class=\"token string\">'Germany'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> brand<span class=\"token operator\">:</span> <span class=\"token string\">'Mercedes'</span><span class=\"token punctuation\">,</span> nation<span class=\"token operator\">:</span> <span class=\"token string\">'Germany'</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">USA</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span> brand<span class=\"token operator\">:</span> <span class=\"token string\">'Chevy'</span><span class=\"token punctuation\">,</span> model<span class=\"token operator\">:</span> <span class=\"token string\">'Mustang'</span><span class=\"token punctuation\">,</span> nation<span class=\"token operator\">:</span> <span class=\"token string\">'USA'</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<br>\n이는 다음과 같은 모식도로 reduce 구동의 단계를 살펴볼 수 있다.\n<table style=\"font-size:9pt\">\n  <tr><th>#</th><th>acc(list)</th><th>cur(car)</th><th>return</th></tr>\n  <tr><td>1</td><td>{}</td><td>{ brand: 'BMW', nation: 'Germany' }</td><td>{ <br> &nbsp&nbsp Germany: [ <br> &nbsp&nbsp&nbsp&nbsp { brand: 'BMW', nation: 'Germany' }\n    <br> &nbsp&nbsp ] <br> }</td></tr>\n  <tr><td>2</td><td>{ <br> &nbsp&nbsp Germany: [ <br> &nbsp&nbsp&nbsp&nbsp { brand: 'BMW', nation: 'Germany' }\n    <br> &nbsp&nbsp ] <br> }</td><td>{ brand: 'Mercedes', nation: 'Germany' }</td><td>{ <br> &nbsp&nbsp Germany: [ <br> &nbsp&nbsp&nbsp&nbsp { brand: 'BMW', nation: 'Germany' }, <br> &nbsp&nbsp&nbsp&nbsp { brand: 'Mercedes', nation: 'Germany' }\n    <br> &nbsp&nbsp ] <br> }</td></tr>\n  <tr><td>3</td><td>{ <br> &nbsp&nbsp Germany: [ <br> &nbsp&nbsp&nbsp&nbsp { brand: 'BMW', nation: 'Germany' }, <br> &nbsp&nbsp&nbsp&nbsp { brand: 'Mercedes', nation: 'Germany' }\n    <br> &nbsp&nbsp ] <br> }</td><td>{ brand: 'volkswagen', nation: 'Germany' }</td><td>{ <br> &nbsp&nbsp Germany: [ <br> &nbsp&nbsp&nbsp&nbsp { brand: 'BMW', nation: 'Germany' }, <br> &nbsp&nbsp&nbsp&nbsp { brand: 'Mercedes', nation: 'Germany' }, <br> &nbsp&nbsp&nbsp&nbsp { brand: 'volkswagen', nation: 'Germany' }\n    <br> &nbsp&nbsp ] <br> }</td></tr>\n  <tr><td>4</td><td>{ <br> &nbsp&nbsp Germany: [ <br> &nbsp&nbsp&nbsp&nbsp { brand: 'BMW', nation: 'Germany' }, <br> &nbsp&nbsp&nbsp&nbsp { brand: 'Mercedes', nation: 'Germany' }, <br> &nbsp&nbsp&nbsp&nbsp { brand: 'volkswagen', nation: 'Germany' }\n    <br> &nbsp&nbsp ] <br> }</td><td>{ brand: 'Chevy', nation: 'USA' }</td><td>{ <br> &nbsp&nbsp Germany: [ <br> &nbsp&nbsp&nbsp&nbsp { brand: 'BMW', nation: 'Germany' }, <br> &nbsp&nbsp&nbsp&nbsp { brand: 'Mercedes', nation: 'Germany' }, <br> &nbsp&nbsp&nbsp&nbsp { brand: 'volkswagen', nation: 'Germany' }\n    <br> &nbsp&nbsp ], <br> &nbsp&nbsp USA: [ { brand: 'Chevy', nation: 'USA' }\n    <br> &nbsp&nbsp ] <br> }</td></tr>\n</table>\n<br>\n<br>\n<br>\n<hr />\n<h4>연습문제1</h4>\n<p>학생의 정보가 담긴 객체를 엘리먼트로 갖는 배열을 입력받아 여학생들의 경우에만 평균 점수(정수)를 계산하여 해당 결과를 배열로 리턴하고자 한다.</p>\n<p><span style=\"color:#088A68\"><strong>힌트</strong></span></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">let studentList = [\n  {\n    name: &#39;Wanda&#39;,\n    gender: &#39;f&#39;,\n    grades: [1.5, 3.5, 2],\n  },\n  {\n    name: &#39;Natasha&#39;,\n    gender: &#39;f&#39;,\n    country: &#39;Soviet Union&#39;,\n    grades: [5, 4, 4.5],\n  },\n  {\n    name: &#39;Steve&#39;,\n    gender: &#39;m&#39;,\n    grades: [2, 2.5, 3, 3],\n  },\n  {\n    name: &#39;Parker&#39;,\n    gender: &#39;m&#39;,\n    grades: [4, 5, 5],\n  },\n];\n\n// result\n[\n  { name: &#39;Wanda&#39;, gender: &#39;f&#39;, grades: 2 },\n  { name: &#39;Natasha&#39;, gender: &#39;f&#39;, grades: 5 },\n];</code></pre></div>\n<br>\n<h4>Reference Code</h4>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre style=\"counter-reset: linenumber 0\" class=\"language-jsx line-numbers\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">filterGirlsGrade</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">students</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// [더이상 쪼갤 수 없는 것] 여자</span>\n  <span class=\"token keyword\">let</span> girls <span class=\"token operator\">=</span> students<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">someone</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> someone<span class=\"token punctuation\">.</span>gender <span class=\"token operator\">===</span> <span class=\"token string\">\"f\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// [로직1] girls 배열에 담긴 엘리먼트들 중 grades key를 평균으로 reduce해야 함</span>\n  <span class=\"token keyword\">return</span> girls<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">el</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> sum <span class=\"token operator\">=</span> el<span class=\"token punctuation\">.</span>grades<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">acc<span class=\"token punctuation\">,</span> cur</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> acc <span class=\"token operator\">+</span> cur<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> avg <span class=\"token operator\">=</span> sum <span class=\"token operator\">/</span> el<span class=\"token punctuation\">.</span>grades<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n\n    el<span class=\"token punctuation\">.</span>grades <span class=\"token operator\">=</span> avg<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> el<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<br>\n<br>\n<br>\n<h4>연습문제2</h4>\n<p>배열을 입력받아 배열에서 가장 짧은 길이를 가진 문자열 엘리먼트를 리턴하고자 한다.</p>\n<h4>Reference Code</h4>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre style=\"counter-reset: linenumber 0\" class=\"language-jsx line-numbers\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">whatIsTheShortestLetter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">arr</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// [더이상 쪼갤 수 없는 것] 문자일 때</span>\n  <span class=\"token keyword\">let</span> letterOnly <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">el</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">typeof</span> el <span class=\"token operator\">===</span> <span class=\"token string\">\"string\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>letterOnly<span class=\"token punctuation\">.</span>length <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// [로직1] letterOnly에 저장한 문자들의 길이를 reduce로 비교하여 줄여감</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">return</span> letterOnly<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">acc<span class=\"token punctuation\">,</span> cur</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>acc<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&lt;=</span> cur<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">return</span> acc<span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">return</span> cur<span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<br>\n<br>\n<br>\n<h4>연습문제3</h4>\n<p>어떤 형태의 배열이든, 배열들의 엘리먼트를 모두 담고 있는 단일 배열을 리턴하고자 한다.</p>\n<h4>Reference Code</h4>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre style=\"counter-reset: linenumber 0\" class=\"language-jsx line-numbers\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">arrayFlatten</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">arr</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 결과값(accumulator) 엘리먼트에 계속 현재의 엘리먼트(cur)를 concat시키면 간단하다.</span>\n  <span class=\"token keyword\">let</span> flattened <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">acc<span class=\"token punctuation\">,</span> cur</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> acc<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>cur<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> flattened<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","title":"reduce","category":"javascript","date":"17 Aug, 2020"}},"staticQueryHashes":["3649515864"]}