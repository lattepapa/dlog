{"componentChunkName":"component---src-templates-post-template-tsx","path":"/배열과 알고리즘(2)","result":{"pageContext":{"html":"<h3>배열 알고리즘</h3>\n<h4>합쳐서 어떤 수가 나오는 배열의 항목 쌍 찾기</h4>\n<p>예를들어 [1,2,3,4,5,6,7,8,9]와 9가 인자로 주어질 때, 합쳐서 9가 나오는 수는 2와 7, 3과 6, 4와 5의 조합이 있다. 간단히 이중 for 루프를 이용할 수 있다. 이중 for 루프는 시간복잡도에서 손해(<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><msup><mrow></mrow><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n{^2})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mord\"><span class=\"mord\"><span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>)가 있어도, 공간복잡도에서는 유리하다(<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span>).</p>\n<p>이를 보완하는 방법으로는 <strong>해시테이블</strong>을 이용하는 것이 있다. 해시테이블에 값을 저장하기 위해서 최대 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span>의 시간복잡도가 소요되며, 이 해시테이블에서 값을 검색하는데에도 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span>의 공간복잡도가 소요된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre style=\"counter-reset: linenumber 0\" class=\"language-jsx line-numbers\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">findSumBetter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">arr<span class=\"token punctuation\">,</span> num</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> hashtable <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> diff <span class=\"token operator\">=</span> num <span class=\"token operator\">-</span> arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>hashtable<span class=\"token punctuation\">[</span>diff<span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span>diff<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      hashtable<span class=\"token punctuation\">[</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> diff<span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hashtable<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> key <span class=\"token keyword\">in</span> hashtable<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      result<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> hashtable<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">findSumBetter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// [[1, 8], [2, 7], [3, 6], [4, 5]];</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<br />\n<h4>크기가 동일한 두 배열의 중앙값 찾기</h4>\n<p>예를들어 오름차순 정렬된 [1,2,3]과 [2,3,5]이 인자로 주어질 경우, 중앙값인 2.5를 반환해야 한다. 단, 배열의 길이가 짝수일 경우를 고려해야 하는데 이 경우 중앙값은 <strong>두 개의 중간 숫자의 평균</strong>이 된다. 배열의 길이가 짝수일 경우를 고려해야 하는 이유는, 두 배열이 그 길이가 같다면 두 배열의 전체 길이는 반드시 짝수이기 때문이다.</p>\n<p>물론 아래의 알고리즘은 정말 전체 길이에 다다를 때까지 모든 항목을 순회하는 것이 아니다. 1) 중앙값이 더 큰 배열을 반으로 나누어 2) 절반 중 큰쪽을 다시 재귀적으로 중앙값 계산을 한다. 따라서 시간복잡도는 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>l</mi><mi>o</mi><mi>g</mi><msub><mrow></mrow><mn>2</mn></msub><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(log{_2}{n})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord\"><span class=\"mord\"><span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span></span><span class=\"mclose\">)</span></span></span></span>이 될 것이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre style=\"counter-reset: linenumber 0\" class=\"language-jsx line-numbers\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">median</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">arr1<span class=\"token punctuation\">,</span> arr2<span class=\"token punctuation\">,</span> length</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 중앙항목 도출 헬퍼함수</span>\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">med</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">arr</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">.</span>length <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">===</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> arr<span class=\"token punctuation\">[</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">.</span>length <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>arr<span class=\"token punctuation\">.</span>length <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> arr<span class=\"token punctuation\">[</span>arr<span class=\"token punctuation\">.</span>length <span class=\"token operator\">/</span> <span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 두 배열의 길이가 2 이하일 경우</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">===</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>arr1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> arr2<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">===</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>arr1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> arr2<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> arr2<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 두 배열의 길이가 3 이상일 경우</span>\n  <span class=\"token keyword\">let</span> median1 <span class=\"token operator\">=</span> <span class=\"token function\">med</span><span class=\"token punctuation\">(</span>arr1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    median2 <span class=\"token operator\">=</span> <span class=\"token function\">med</span><span class=\"token punctuation\">(</span>arr2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">let</span> isEven <span class=\"token operator\">=</span> length <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">===</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token number\">1</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">    shorten <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>length <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> isEven<span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">    newLength <span class=\"token operator\">=</span> length <span class=\"token operator\">-</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>length <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> isEven<span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>median1 <span class=\"token operator\">===</span> median2<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> median1<span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>median1 <span class=\"token operator\">&lt;</span> median2<span class=\"token punctuation\">)</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> <span class=\"token function\">median</span><span class=\"token punctuation\">(</span>arr1<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span>shorten<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> arr2<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>shorten<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> newLength<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>median1 <span class=\"token operator\">></span> median2<span class=\"token punctuation\">)</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> <span class=\"token function\">median</span><span class=\"token punctuation\">(</span>arr2<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span>shorten<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> arr1<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>shorten<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> newLength<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">median</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 3.5</span>\n<span class=\"token function\">median</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2.5</span>\n<span class=\"token function\">median</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">23</span><span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">33</span><span class=\"token punctuation\">,</span> <span class=\"token number\">450</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 28</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<br />\n<h4>k개의 정렬된 배열에서 공통항목 찾기</h4>\n<p>이차원배열이 인자로 주어질 때 각 배열에 반복 접근하되, 각 배열에서 반복된 항목이 있는 경우 해당 항목은 1개가 있는 것으로 간주한다. 이러한 조건을 바탕으로 해시테이블을 통해 어떤 항목이 공통적으로 등장하는 지 확인할 수 있다. 해시테이블을 활용하므로 공간복잡도는 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span>이다. 또한 시간복잡도는 주어진 배열 중 가장 길이가 긴 것에 따라 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>k</mi><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(kn)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span>이 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre style=\"counter-reset: linenumber 0\" class=\"language-jsx line-numbers\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">commonElements</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">kArray</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 해시테이블, 임시변수들을 선언</span>\n  <span class=\"token keyword\">let</span> hashmap <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    last <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 이차원배열을 새로 접근할 때 last 변수값을 \"\"로 초기화</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> currentArray <span class=\"token keyword\">of</span> kArray<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    last <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> currentElement <span class=\"token keyword\">of</span> currentArray<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>last <span class=\"token operator\">!==</span> currentElement<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">        <span class=\"token operator\">!</span>hashmap<span class=\"token punctuation\">[</span>currentElement<span class=\"token punctuation\">]</span></span><span class=\"gatsby-highlight-code-line\">          <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>hashmap<span class=\"token punctuation\">[</span>currentElement<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></span><span class=\"gatsby-highlight-code-line\">          <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>hashmap<span class=\"token punctuation\">[</span>currentElement<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">}</span></span>\n      last <span class=\"token operator\">=</span> currentElement<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// 해시테이블의 key-value가 이차원배열의 길이와 같다면</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// 이차원배열 내 모든 배열에 공통으로 존재했다는 의미</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> prop <span class=\"token keyword\">in</span> hashmap<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hashmap<span class=\"token punctuation\">[</span>prop<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> kArray<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> answer<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>prop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>\n  <span class=\"token keyword\">return</span> answer<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">commonElements</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [1, 2]</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<br />\n<h4>나선형 출력</h4>\n<p><img src=\"https://user-images.githubusercontent.com/67884699/104085622-53d46d00-5294-11eb-99e0-4910981cd0ed.jpg\" alt=\"spiral\"><br>\n다음과 같이 나선형 순서로 항목들을 출력하고자 한다. 이를 위해 문제를 쪼개어 생각하면, 1) 왼쪽에서 <strong>오른쪽으로</strong> 출력하는 것, 2) 위에서 <strong>아래로</strong> 출력하는 것, 3) 오른쪽에서 <strong>왼쪽으로</strong> 출력하는 것, 4) 아래에서 <strong>위로</strong> 출력하는 것, 5) 그리고 이 네가지 연산에 조건을 거는 것으로 구분할 수 있다. 따라서 이 네가지 경우에 따른 결과를 각각 저장할 변수를 설정하여 제어한다면, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>k</mi><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(kn)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span>의 시간복잡도와 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span>의 공간복잡도로 알고리즘을 구현할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre style=\"counter-reset: linenumber 0\" class=\"language-jsx line-numbers\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">spiralPrint</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">kArr</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// 지붕 행, 오른쪽 열, 바닥 행, 왼쪽 열을 인덱스를 기준으로 정의한다</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">let</span> topRow <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">    rightCol <span class=\"token operator\">=</span> kArr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">    bottomRow <span class=\"token operator\">=</span> kArr<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">    leftCol <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>topRow <span class=\"token operator\">&lt;</span> bottomRow <span class=\"token operator\">&amp;&amp;</span> leftCol <span class=\"token operator\">&lt;</span> rightCol<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 먼저 지붕 행에서, 왼쪽에서 오른쪽으로 항목들을 차례로 담는다</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> rightCol<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      result<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>kArr<span class=\"token punctuation\">[</span>topRow<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    topRow<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 그 다음 오른쪽 열에서, 위에서 아래로 항목들을 차례로 담는다</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> topRow<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> bottomRow<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      result<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>kArr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>rightCol<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    rightCol<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 나선형 접근이 안끝났다면 아래와 같이 이어서 접근을 지속한다</span>\n    <span class=\"token comment\">// 바닥 행에서, 오른쪽에서 왼쪽으로 항목들을 역순으로 담는다</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>topRow <span class=\"token operator\">&lt;=</span> bottomRow<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> j <span class=\"token operator\">=</span> rightCol<span class=\"token punctuation\">;</span> j <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        result<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>kArr<span class=\"token punctuation\">[</span>bottomRow<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      bottomRow<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// 나선형 접근이 안끝났다면 아래와 같이 이어서 접근을 지속한다</span>\n    <span class=\"token comment\">// 왼쪽 열에서, 아래에서 위로 항목들을 역순으로 담는다</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>leftCol <span class=\"token operator\">&lt;=</span> rightCol<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> bottomRow<span class=\"token punctuation\">;</span> i <span class=\"token operator\">></span> topRow<span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        result<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>kArr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>leftCol<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      leftCol<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">spiralPrint</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">19</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// [1, 2, 3, 4, 5, 10, 15, 20, 19, 18, 17, 16, 11, 6, 7, 8, 9, 14, 13, 12, 11];</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<br />\n<h4>Tic-Tac-Toe</h4>\n<p>틱택토 게임의 승패를 예측하기 위해선 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>3</mn><mo>∗</mo><mn>3</mn></mrow><annotation encoding=\"application/x-tex\">3*3</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">3</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">3</span></span></span></span>의 가변배열(jagged array)을 for 루프로 접근해야 한다. 세 행을 모두 확인한 후, 대각선을 확인한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre style=\"counter-reset: linenumber 0\" class=\"language-jsx line-numbers\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">ticTacToe</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">board<span class=\"token punctuation\">,</span> player</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// 행을 확인하는 헬퍼함수</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">checkRow</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">row<span class=\"token punctuation\">,</span> player</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">!==</span> player<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// 열을 확인하는 헬퍼함수</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">checkCol</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">board<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">,</span> player</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>board<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">!==</span> player<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token comment\">// 행과 열에서 이길 수 있는 경우</span>\n  <span class=\"token keyword\">let</span> winRow <span class=\"token operator\">=</span>\n    <span class=\"token function\">checkRow</span><span class=\"token punctuation\">(</span>board<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> player<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span>\n    <span class=\"token function\">checkRow</span><span class=\"token punctuation\">(</span>board<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> player<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span>\n    <span class=\"token function\">checkRow</span><span class=\"token punctuation\">(</span>board<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> player<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">let</span> winCol <span class=\"token operator\">=</span>\n    <span class=\"token function\">checkCol</span><span class=\"token punctuation\">(</span>board<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> player<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span>\n    <span class=\"token function\">checkCol</span><span class=\"token punctuation\">(</span>board<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> player<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span>\n    <span class=\"token function\">checkCol</span><span class=\"token punctuation\">(</span>board<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> player<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 대각선에서 이길 수 있는 경우</span>\n  <span class=\"token keyword\">let</span> diagonalWin1 <span class=\"token operator\">=</span>\n    board<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> player <span class=\"token operator\">&amp;&amp;</span> board<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> player <span class=\"token operator\">&amp;&amp;</span> board<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> player<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">let</span> diagonalWin2 <span class=\"token operator\">=</span>\n    board<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> player <span class=\"token operator\">&amp;&amp;</span> board<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> player <span class=\"token operator\">&amp;&amp;</span> board<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> player<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 승패예측</span>\n  <span class=\"token keyword\">return</span> winRow <span class=\"token operator\">||</span> winCol <span class=\"token operator\">||</span> diagonalWin1 <span class=\"token operator\">||</span> diagonalWin2<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">ticTacToe</span><span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">[</span><span class=\"token string\">\"o\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"-\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"x\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token string\">\"-\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"o\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"-\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token string\">\"-\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"x\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"o\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"x\"</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// false</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<br />\n<h4>길 찾기</h4>\n<p><img src=\"https://user-images.githubusercontent.com/67884699/104087115-c9463a80-52a0-11eb-93fa-053e2fdab7d3.jpg\" alt=\"maze\"><br>\n위의 그림과 같은 형태로 배열이 인자로 주어질 때, 현재 'x'에 위치할 때 출구인 'e'로 나가는 길을 탐색한다. m행 n열인 이차원배열임을 가정한다면 시간복잡도는 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>m</mi><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(mn)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span>, 공간복잡도는 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span>을 만족한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre style=\"counter-reset: linenumber 0\" class=\"language-jsx line-numbers\"><code class=\"language-jsx\"><span class=\"gatsby-highlight-code-line\"><span class=\"token comment\">// 미로 배열설정(1): 행을 나누고</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> <span class=\"token string\">\"%e%%%%%%%%%\\n%...%.%...%\\n%.%.%.%.%%%\\n%.%.......%\\n%%%..%%.%.%\\n%.%.%%..%.%\\n%%%%%%%%%x%\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token string\">\"\\n\"</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\"><span class=\"token comment\">// 미로 배열설정(2): 행(row)마다 열을 나눈다(split)</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">let</span> maze <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">row</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> row<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">pathFinder</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">maze</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 문자 'x', 'e'를 찾아주는 헬퍼 함수</span>\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">findStr</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">str<span class=\"token punctuation\">,</span> maze</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> maze<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> maze<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>maze<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> str<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 미로 행렬을 다시 문자로 출력해주는 헬퍼 함수</span>\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">printMaze</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">maze</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> maze<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> maze<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        result <span class=\"token operator\">+=</span> maze<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      result <span class=\"token operator\">+=</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 결과 출력</span>\n  <span class=\"token keyword\">let</span> start <span class=\"token operator\">=</span> <span class=\"token function\">findStr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"e\"</span><span class=\"token punctuation\">,</span> maze<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    end <span class=\"token operator\">=</span> <span class=\"token function\">findStr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"x\"</span><span class=\"token punctuation\">,</span> maze<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">path</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> start<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 상, 하, 좌, 우를 재귀적으로 확인해주는 헬퍼 함수</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">path</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">i<span class=\"token punctuation\">,</span> j</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 미로 범위를 벗어나는 경우</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">></span> maze<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token operator\">||</span> j <span class=\"token operator\">></span> maze<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token operator\">||</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 올바른 길을 찾은 경우</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">===</span> end<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> j <span class=\"token operator\">===</span> end<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 길이 아니라 벽(%)이거나, 현재 위치(+)인 경우</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>maze<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"%\"</span> <span class=\"token operator\">||</span> maze<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"+\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 현재 위치를 표시</span>\n    maze<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"+\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">printMaze</span><span class=\"token punctuation\">(</span>maze<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 현재 위치의 상, 하, 좌, 우가 올바른 길인 경우</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">path</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> j <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token function\">path</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token function\">path</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token function\">path</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n    maze<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\".\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">pathFinder</span><span class=\"token punctuation\">(</span>maze<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">/*</span>\n<span class=\"token comment\"></span>\n<span class=\"token comment\">  %+%%%%%%%%%</span>\n<span class=\"token comment\">  %...%.%...%</span>\n<span class=\"token comment\">  %.%.%.%.%%%</span>\n<span class=\"token comment\">  %.%.......%</span>\n<span class=\"token comment\">  %%%..%%.%.%</span>\n<span class=\"token comment\">  %.%.%%..%.%</span>\n<span class=\"token comment\">  %%%%%%%%%x%</span>\n<span class=\"token comment\"></span>\n<span class=\"token comment\">  %+%%%%%%%%%</span>\n<span class=\"token comment\">  %+..%.%...%</span>\n<span class=\"token comment\">  %.%.%.%.%%%</span>\n<span class=\"token comment\">  %.%.......%</span>\n<span class=\"token comment\">  %%%..%%.%.%</span>\n<span class=\"token comment\">  %.%.%%..%.%</span>\n<span class=\"token comment\">  %%%%%%%%%x%</span>\n<span class=\"token comment\"></span>\n<span class=\"token comment\">  %+%%%%%%%%%</span>\n<span class=\"token comment\">  %+..%.%...%</span>\n<span class=\"token comment\">  %+%.%.%.%%%</span>\n<span class=\"token comment\">  %.%.......%</span>\n<span class=\"token comment\">  %%%..%%.%.%</span>\n<span class=\"token comment\">  %.%.%%..%.%</span>\n<span class=\"token comment\">  %%%%%%%%%x%</span>\n<span class=\"token comment\"></span>\n<span class=\"token comment\">  %+%%%%%%%%%</span>\n<span class=\"token comment\">  %+..%.%...%</span>\n<span class=\"token comment\">  %+%.%.%.%%%</span>\n<span class=\"token comment\">  %+%.......%</span>\n<span class=\"token comment\">  %%%..%%.%.%</span>\n<span class=\"token comment\">  %.%.%%..%.%</span>\n<span class=\"token comment\">  %%%%%%%%%x%</span>\n<span class=\"token comment\"></span>\n<span class=\"token comment\">  %+%%%%%%%%%</span>\n<span class=\"token comment\">  %++.%.%...%</span>\n<span class=\"token comment\">  %.%.%.%.%%%</span>\n<span class=\"token comment\">  %.%.......%</span>\n<span class=\"token comment\">  %%%..%%.%.%</span>\n<span class=\"token comment\">  %.%.%%..%.%</span>\n<span class=\"token comment\">  %%%%%%%%%x%</span>\n<span class=\"token comment\"></span>\n<span class=\"token comment\">  %+%%%%%%%%%</span>\n<span class=\"token comment\">  %+++%.%...%</span>\n<span class=\"token comment\">  %.%.%.%.%%%</span>\n<span class=\"token comment\">  %.%.......%</span>\n<span class=\"token comment\">  %%%..%%.%.%</span>\n<span class=\"token comment\">  %.%.%%..%.%</span>\n<span class=\"token comment\">  %%%%%%%%%x%</span>\n<span class=\"token comment\"></span>\n<span class=\"token comment\">  %+%%%%%%%%%</span>\n<span class=\"token comment\">  %+++%.%...%</span>\n<span class=\"token comment\">  %.%+%.%.%%%</span>\n<span class=\"token comment\">  %.%.......%</span>\n<span class=\"token comment\">  %%%..%%.%.%</span>\n<span class=\"token comment\">  %.%.%%..%.%</span>\n<span class=\"token comment\">  %%%%%%%%%x%</span>\n<span class=\"token comment\"></span>\n<span class=\"token comment\">  %+%%%%%%%%%</span>\n<span class=\"token comment\">  %+++%.%...%</span>\n<span class=\"token comment\">  %.%+%.%.%%%</span>\n<span class=\"token comment\">  %.%+......%</span>\n<span class=\"token comment\">  %%%..%%.%.%</span>\n<span class=\"token comment\">  %.%.%%..%.%</span>\n<span class=\"token comment\">  %%%%%%%%%x%</span>\n<span class=\"token comment\"></span>\n<span class=\"token comment\">  %+%%%%%%%%%</span>\n<span class=\"token comment\">  %+++%.%...%</span>\n<span class=\"token comment\">  %.%+%.%.%%%</span>\n<span class=\"token comment\">  %.%+......%</span>\n<span class=\"token comment\">  %%%+.%%.%.%</span>\n<span class=\"token comment\">  %.%.%%..%.%</span>\n<span class=\"token comment\">  %%%%%%%%%x%</span>\n<span class=\"token comment\"></span>\n<span class=\"token comment\">  %+%%%%%%%%%</span>\n<span class=\"token comment\">  %+++%.%...%</span>\n<span class=\"token comment\">  %.%+%.%.%%%</span>\n<span class=\"token comment\">  %.%+......%</span>\n<span class=\"token comment\">  %%%+.%%.%.%</span>\n<span class=\"token comment\">  %.%+%%..%.%</span>\n<span class=\"token comment\">  %%%%%%%%%x%</span>\n<span class=\"token comment\"></span>\n<span class=\"token comment\">  %+%%%%%%%%%</span>\n<span class=\"token comment\">  %+++%.%...%</span>\n<span class=\"token comment\">  %.%+%.%.%%%</span>\n<span class=\"token comment\">  %.%+......%</span>\n<span class=\"token comment\">  %%%++%%.%.%</span>\n<span class=\"token comment\">  %.%.%%..%.%</span>\n<span class=\"token comment\">  %%%%%%%%%x%</span>\n<span class=\"token comment\"></span>\n<span class=\"token comment\">  %+%%%%%%%%%</span>\n<span class=\"token comment\">  %+++%.%...%</span>\n<span class=\"token comment\">  %.%+%.%.%%%</span>\n<span class=\"token comment\">  %.%++.....%</span>\n<span class=\"token comment\">  %%%++%%.%.%</span>\n<span class=\"token comment\">  %.%.%%..%.%</span>\n<span class=\"token comment\">  %%%%%%%%%x%</span>\n<span class=\"token comment\"></span>\n<span class=\"token comment\">  %+%%%%%%%%%</span>\n<span class=\"token comment\">  %+++%.%...%</span>\n<span class=\"token comment\">  %.%+%.%.%%%</span>\n<span class=\"token comment\">  %.%+++....%</span>\n<span class=\"token comment\">  %%%++%%.%.%</span>\n<span class=\"token comment\">  %.%.%%..%.%</span>\n<span class=\"token comment\">  %%%%%%%%%x%</span>\n<span class=\"token comment\"></span>\n<span class=\"token comment\">  %+%%%%%%%%%</span>\n<span class=\"token comment\">  %+++%.%...%</span>\n<span class=\"token comment\">  %.%+%.%.%%%</span>\n<span class=\"token comment\">  %.%++++...%</span>\n<span class=\"token comment\">  %%%++%%.%.%</span>\n<span class=\"token comment\">  %.%.%%..%.%</span>\n<span class=\"token comment\">  %%%%%%%%%x%</span>\n<span class=\"token comment\"></span>\n<span class=\"token comment\">  %+%%%%%%%%%</span>\n<span class=\"token comment\">  %+++%.%...%</span>\n<span class=\"token comment\">  %.%+%.%.%%%</span>\n<span class=\"token comment\">  %.%+++++..%</span>\n<span class=\"token comment\">  %%%++%%.%.%</span>\n<span class=\"token comment\">  %.%.%%..%.%</span>\n<span class=\"token comment\">  %%%%%%%%%x%</span>\n<span class=\"token comment\"></span>\n<span class=\"token comment\">  %+%%%%%%%%%</span>\n<span class=\"token comment\">  %+++%.%...%</span>\n<span class=\"token comment\">  %.%+%.%.%%%</span>\n<span class=\"token comment\">  %.%+++++..%</span>\n<span class=\"token comment\">  %%%++%%+%.%</span>\n<span class=\"token comment\">  %.%.%%..%.%</span>\n<span class=\"token comment\">  %%%%%%%%%x%</span>\n<span class=\"token comment\"></span>\n<span class=\"token comment\">  %+%%%%%%%%%</span>\n<span class=\"token comment\">  %+++%.%...%</span>\n<span class=\"token comment\">  %.%+%.%.%%%</span>\n<span class=\"token comment\">  %.%+++++..%</span>\n<span class=\"token comment\">  %%%++%%+%.%</span>\n<span class=\"token comment\">  %.%.%%.+%.%</span>\n<span class=\"token comment\">  %%%%%%%%%x%</span>\n<span class=\"token comment\"></span>\n<span class=\"token comment\">  %+%%%%%%%%%</span>\n<span class=\"token comment\">  %+++%.%...%</span>\n<span class=\"token comment\">  %.%+%.%.%%%</span>\n<span class=\"token comment\">  %.%+++++..%</span>\n<span class=\"token comment\">  %%%++%%+%.%</span>\n<span class=\"token comment\">  %.%.%%++%.%</span>\n<span class=\"token comment\">  %%%%%%%%%x%</span>\n<span class=\"token comment\"></span>\n<span class=\"token comment\">  %+%%%%%%%%%</span>\n<span class=\"token comment\">  %+++%.%...%</span>\n<span class=\"token comment\">  %.%+%.%.%%%</span>\n<span class=\"token comment\">  %.%++++++.%</span>\n<span class=\"token comment\">  %%%++%%.%.%</span>\n<span class=\"token comment\">  %.%.%%..%.%</span>\n<span class=\"token comment\">  %%%%%%%%%x%</span>\n<span class=\"token comment\"></span>\n<span class=\"token comment\">  %+%%%%%%%%%</span>\n<span class=\"token comment\">  %+++%.%...%</span>\n<span class=\"token comment\">  %.%+%.%.%%%</span>\n<span class=\"token comment\">  %.%+++++++%</span>\n<span class=\"token comment\">  %%%++%%.%.%</span>\n<span class=\"token comment\">  %.%.%%..%.%</span>\n<span class=\"token comment\">  %%%%%%%%%x%</span>\n<span class=\"token comment\"></span>\n<span class=\"token comment\">  %+%%%%%%%%%</span>\n<span class=\"token comment\">  %+++%.%...%</span>\n<span class=\"token comment\">  %.%+%.%.%%%</span>\n<span class=\"token comment\">  %.%+++++++%</span>\n<span class=\"token comment\">  %%%++%%.%+%</span>\n<span class=\"token comment\">  %.%.%%..%.%</span>\n<span class=\"token comment\">  %%%%%%%%%x%</span>\n<span class=\"token comment\"></span>\n<span class=\"token comment\">  %+%%%%%%%%%</span>\n<span class=\"token comment\">  %+++%.%...%</span>\n<span class=\"token comment\">  %.%+%.%.%%%</span>\n<span class=\"token comment\">  %.%+++++++%</span>\n<span class=\"token comment\">  %%%++%%.%+%</span>\n<span class=\"token comment\">  %.%.%%..%+%</span>\n<span class=\"token comment\">  %%%%%%%%%x%</span>\n<span class=\"token comment\"></span>\n<span class=\"token comment\">*/</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<br />\n<br />\n<br />\n<br />\n<p><text style=\"color:gray\"><em>*참고: \"자바스크립트로 하는 자료 구조와 알고리즘\"(배세민님, 에이콘)</em></text></p>","title":"배열과 알고리즘(2)","category":"algorithm","date":"06 Jan, 2021"}},"staticQueryHashes":["3649515864"]}