{"componentChunkName":"component---src-templates-post-template-tsx","path":"/알고리즘 기본전략","result":{"pageContext":{"html":"<h3>Breadth-First Search</h3>\n<p>어떤 계층(깊이)에 위치한 노드들을 탐색한 후에 다음 계층(깊이)을 탐색하는 방식</p>\n<h4>자료구조</h4>\n<p><strong>Queue</strong> 구조를 가정한다. 탐색 계층의 노드들을 <em>enqueue</em>한 후 차례대로 <em>dequeue</em>하면서 확인(출력)</p>\n<h4>단점</h4>\n<p>트리가 넓을수록, 즉, 자식들이 많을수록 메모리 소모가 급격히 늘어난다.</p>\n<h4>예시</h4>\n<p>네트워크, SNS에서 알 수도 있는 친구 추천 등</p>\n<h3>Depth-First Search</h3>\n<p>연결되어 있는 노드들의 우선순위에 따라 일단 최대한 깊게 들어가서 탐색해보는 방식</p>\n<h4>자료구조</h4>\n<p><strong>Stack</strong> 구조를 가정한다. 연결 노드들을 push한 후 차례대로 pop하면서 확인(출력)</p>\n<h4>단점</h4>\n<p>트리가 깊어질수록, 탐색시간이 무한대로 늘어날 수 있다. 그렇기 때문에 <strong>Back-Tracking</strong>을 활용하여, 유망성 낮은 트리 순회를 조기에 끊어내는 것이 매우 중요</p>\n<h4>예시</h4>\n<p>전략시뮬레이션, 체스, 바둑 등</p>","title":"알고리즘 기본전략","category":"javascript","date":"15 Sep, 2020"}},"staticQueryHashes":["3649515864"]}